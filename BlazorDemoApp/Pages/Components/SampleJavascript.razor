@page "/sample-js"
@inject IJSRuntime jsRuntime

<h3>Sample Javascript</h3>

<button @onclick="ShowAlert">Alert</button><br />
<span>@confirmResult</span><br />
<button @onclick="ShowConfirm">Display Confirm</button>
<button @onclick="CallInvokeMethodJavascript">Call Instance Method</button>
@code{
    private string confirmResult;
    private void ShowAlert()
    {
        jsRuntime.InvokeVoidAsync("alert","Warning!");
    }
    private async Task ShowConfirm()
    {
        var result= await jsRuntime.InvokeAsync<bool>("confirm", "Do you need to proceed?");
        confirmResult = result.ToString();
    }
    private async Task CallInvokeMethodJavascript()
    {
        //downloads js file to client only when needed
        var sampleJsReference = await jsRuntime.InvokeAsync<IJSObjectReference>("import", "./js/CsMethodToJs.js");
        var dotNetObjRef = DotNetObjectReference.Create(this);
        //await jsRuntime.InvokeVoidAsync("instanceValue", dotNetObjRef);
        await sampleJsReference.InvokeVoidAsync("instanceValue", dotNetObjRef);
    }

    [JSInvokable]
    public async Task<string> GetValueFromInstance()
    {
        return "Hello world from instance!";
    }
    [JSInvokable]
    public static async Task<string> GetValueFromMethod()
    {
        return await Task.FromResult("Hello world!");
    }
}